Shader "Unity Shaders Book/Chapter 12/EdgeDetection"
{
    Properties
    {
        _MainTex ("Texture", 2D) = "white" {}
    }
    SubShader
    {

        Pass
        {
            ZTest Always ZWrite Off Cull Off

            CGPROGRAM
            #pragma vertex vert
            #pragma fragment fragSobel

            #include "UnityCG.cginc"

            sampler2D _MainTex;
            half4 _MainTex_TexelSize;
            fixed _EdgeOnly;
            fixed4 _EdgeColor;
            fixed4 _BackgroundColor;

            struct a2v
            {
                float4 vertex : POSITION;
                float2 texcoord : TEXCOORD0;
            };

            struct v2f
            {
                half2 uv[9] : TEXCOORD0;
                float4 pos : SV_POSITION;
            };

            fixed luminance(fixed4 color)
            {
                return color.r * 0.2125 + color.g * 0.7154 + color.b * 0.0721;
            }

            half sobel(v2f i)
            {
                const half Gx[9] = {-1, -2, -1, 0, 0 ,0, 1, 2, 1};
                const half Gy[9] = {-1, 0, 1, -2, 0 ,2, -1, 0, 1};

                half texColor;
                half edgeX = 0;
                half edgeY = 0;

                for (int it = 0; it < 9; it++)
                {
                    texColor = luminance(tex2D(_MainTex, i.uv[it]));
                    edgeX += texColor * Gx[it];
                    edgeY += texColor * Gy[it];
                }

                half edge = abs(edgeX) + abs(edgeY);
                return edge;
            }

            v2f vert (a2v v)
            {
                v2f o;
                o.pos = UnityObjectToClipPos(v.vertex);
                half2 uv = v.texcoord;

                for (int j = -1, i = 0; j < 2; j++)
                {
                    for (int k = -1; k < 2; k++)
                    {
                        o.uv[i].x = uv.x + _MainTex_TexelSize.x * k;
                        o.uv[i].y = uv.y + _MainTex_TexelSize.y * j;
                        i++;
                    }
                }

                return o;
            }

            fixed4 fragSobel (v2f i) : SV_Target
            {
                half edge = sobel(i);

                fixed4 withEdgeColor = lerp(tex2D(_MainTex,i.uv[4]), _EdgeColor, edge);
                fixed4 OnlyEdgeColor = lerp(_BackgroundColor, _EdgeColor, edge);

                return fixed4(lerp(withEdgeColor, OnlyEdgeColor, _EdgeOnly));
            }
            ENDCG
        }
    }
    FallBack Off
}
